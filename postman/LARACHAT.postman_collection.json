{
	"info": {
		"_postman_id": "60f63a48-680c-4251-8667-a4a3b14c9258",
		"name": "LARACHAT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2417eaa-1efd-4f0a-8f56-201be66d198e",
								"exec": [
									"//Checa se o retorno da requisicao está com status 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"    \r",
									"});//Seta o token no header\r",
									"var varHeader = postman.getResponseHeader(\"Authorization\");\r",
									"var arr_tmp = varHeader.split(\" \");\r",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "test@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{ip}}/auth/login",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://{{ip}}/auth/me",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc8aa531-1e4c-41bf-b07d-c7e00b9dd637",
								"exec": [
									"//Checa se o retorno da requisicao está com status 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"    \r",
									"});//Seta o token no header\r",
									"var varHeader = postman.getResponseHeader(\"Authorization\");\r",
									"var arr_tmp = varHeader.split(\" \");\r",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://{{ip}}/auth/refresh-token",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://{{ip}}/auth/logout",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "User",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74b5e477-dda7-4750-a8f2-db43b5145a63",
								"exec": [
									"//Checa se o retorno da requisicao está com status 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    ",
									"});//Seta o token no header",
									"var varHeader = postman.getResponseHeader(\"Authorization\");",
									"var arr_tmp = varHeader.split(\" \");",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "User3",
									"type": "text"
								},
								{
									"key": "email",
									"value": "test3@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{ip}}/register",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "152d59ca-a5ec-4cdc-8fb8-5d84480ffb35",
								"exec": [
									"//Checa se o retorno da requisicao está com status 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    ",
									"});//Seta o token no header",
									"var varHeader = postman.getResponseHeader(\"Authorization\");",
									"var arr_tmp = varHeader.split(\" \");",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded",
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Update Name",
									"type": "text"
								},
								{
									"key": "email",
									"value": "test@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "http://{{ip}}/users/1",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{ip}}/users/2",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}/users",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}/users/1",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Chat",
			"item": [
				{
					"name": "store",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25f6f63b-3d6d-451a-9f97-cbb2e159d359",
								"exec": [
									"//Checa se o retorno da requisicao está com status 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    ",
									"});//Seta o token no header",
									"var varHeader = postman.getResponseHeader(\"Authorization\");",
									"var arr_tmp = varHeader.split(\" \");",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "sender_user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "receiver_user_id",
									"value": "3",
									"type": "text"
								},
								{
									"key": "message",
									"value": "mandou pro usuario 3",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{ip}}/chat",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b095b1b2-cffd-419d-8510-444105d46cc5",
								"exec": [
									"//Checa se o retorno da requisicao está com status 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    ",
									"});//Seta o token no header",
									"var varHeader = postman.getResponseHeader(\"Authorization\");",
									"var arr_tmp = varHeader.split(\" \");",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "sender_user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "receiver_user_id",
									"value": "2",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{ip}}/chat/search",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"chat",
								"search"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}